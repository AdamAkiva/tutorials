services:
  # Database options for your convince, pick whichever one/s you wish and remove
  # the rest
  # node-template-mongo-dev:
  #   hostname: node-template-mongo-dev
  #   container_name: node-template-mongo-dev
  #   restart: unless-stopped
  #   # Change to a static version (not set as so, because how should I know when
  #   # you use this template?)
  #   # See: https://hub.docker.com/_/mongo/tags
  #   image: mongo:latest
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=admin
  #     - MONGO_DB_NAME=node-template-dev
  #   volumes:
  #     - ../db-dev-data:/data/db:rw
  #   # See: https://stackoverflow.com/a/44440563
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #   stop_grace_period: 2s
  #   healthcheck:
  #     test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/node-template-dev --quiet
  #     interval: 3s
  #     timeout: 2s
  #     retries: 5
  #   command: --port 27017

  node-template-pg-dev:
    hostname: node-template-pg-dev
    container_name: node-template-pg-dev
    restart: unless-stopped
    # Change to a static version (not set as so, because how should I know when
    # you use this template?)
    # See: https://hub.docker.com/_/postgres/tags
    image: postgres:alpine
    user: ${UID}:${GID}
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=node-template-dev
    volumes:
      - ../db-dev-data:/var/lib/postgresql/data:rw
      # See: https://github.com/docker-library/docs/blob/master/postgres/README.md#arbitrary---user-notes
      - /etc/passwd:/etc/passwd:ro
      # See: https://stackoverflow.com/a/44440563
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    stop_grace_period: 2s
    healthcheck:
      test: pg_isready -p 5432 -U admin -d node-template-dev
      interval: 3s
      timeout: 2s
      retries: 5
    command: -p 5432

  # node-template-redis-dev:
  #   hostname: node-template-redis-dev
  #   container_name: node-template-redis-dev
  #   restart: unless-stopped
  #   # Change to a static version (not set as so, because how should I know when
  #   # you use this template?)
  #   # See: https://hub.docker.com/_/redis/tags
  #   image: redis:alpine
  #   # Redis most likely will be used as cache, if you want to make it consistent
  #   # in addition to in-memory cache, don't forget to add a volume
  #   volumes:
  #     - ../db-dev-data:/data/db:rw
  #   # See: https://stackoverflow.com/a/44440563
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #   stop_grace_period: 2s
  #   healthcheck:
  #     test: redis-cli -p 6379 ping | grep PONG
  #     interval: 3s
  #     timeout: 2s
  #     retries: 5
  #   command: redis-server --port 6379

  ##################################################################################

  node-template-be-dev:
    hostname: node-template-be-dev
    container_name: node-template-be-dev
    restart: unless-stopped
    build:
      context: ../be
      dockerfile: Dockerfile
      target: be-dev
      args:
        DOCKER_BUILDKIT: 1
    user: ${UID}:${GID}
    environment:
      - SERVER_PORT=9865
      - SERVER_DEBUG_PORT=9229
      - SERVER_BASE_URL=http://localhost
      - HTTP_ROUTE=v0/api
      - HEALTH_CHECK_ROUTE=health
      - ALLOWED_HOSTS=localhost
      # Depends on whose the client (browser) your application has. Either match
      # it to the frontend application you have, or remove it if it is only
      # accessed by server(s)
      - ALLOWED_ORIGINS=*
      # Uncomment (and maybe change the name) the database(s) you chose
      - DB_URI=postgres://admin:admin@node-template-pg-dev:5432/node-template-dev # Postgres
      # - DB_URI=mongodb://admin:admin@node-template-mongo-dev:27017/node-template-dev?authSource=admin # Mongo
      # - CACHE_URI=redis://node-template-redis-dev:6379 # Redis

      - NODE_ENV=development
      - NODE_NO_WARNINGS=0
      - UV_THREADPOOL_SIZE=${UV_THREADPOOL_SIZE}
    volumes:
      - ../be:/home/node/node-template:rw
      # Volume npm cache to speed up the npm install. This should allow cache reuse
      # whenever node_modules are removed.
      # See: https://docs.npmjs.com/cli/v6/using-npm/config#cache for reference
      - ./cache/be:/home/node/.npm:rw
      # See: https://stackoverflow.com/a/44440563
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    stop_grace_period: 2s
    # tty enables better log format for npm and debug. Using it in development
    # is not an issue, however, don't enable it production since there's no need
    tty: true
    stdin_open: true
    ports:
      - "9865:9865"
      - "9229:9229"
    healthcheck:
      # Change the grep -q command to the http status code returned from the
      # health check route
      test:
        [
          "CMD-SHELL",
          "curl -s -o /dev/null -w '%{http_code}' http://localhost:9865/health | grep -q '204'"
        ]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 30s
    # Uncomment for the database(s) you've chosen
    depends_on:
    #   node-template-mongo-dev:
    #     condition: service_healthy
      node-template-pg-dev:
        condition: service_healthy
    #   node-template-redis-dev:
    #     condition: service_healthy
    command: npm run _install-start

  node-template-fe-dev:
    hostname: node-template-fe-dev
    container_name: node-template-fe-dev
    restart: unless-stopped
    build:
      context: ../fe
      dockerfile: Dockerfile
      target: fe-dev
      args:
        DOCKER_BUILDKIT: 1
    user: ${UID}:${GID}
    environment:
      - CLIENT_PORT=9866
      - NODE_TEMPLATE_HTTP_SERVER_URL=http://localhost:9865/api/v0
      - NODE_TEMPLATE_WS_SERVER_URL=ws://localhost:9865
      - NODE_ENV=development
    volumes:
      - ../fe:/home/node/node-template:rw
      # Volume npm cache to speed up the npm install. This should allow cache reuse
      # whenever node_modules are removed.
      # See: https://docs.npmjs.com/cli/v6/using-npm/config#cache for reference
      - ./cache/fe:/home/node/.npm:rw
      # See: https://stackoverflow.com/a/44440563
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    stop_grace_period: 2s
    # tty enables better log format for npm and debug. Using it in development
    # is not an issue, however, don't enable it production since there's no need
    tty: true
    stdin_open: true
    ports:
      - "9866:9866"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -o /dev/null -w '%{http_code}' http://localhost:9866 | grep -q '200'"
        ]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 30s
    command: npm run _install-start
